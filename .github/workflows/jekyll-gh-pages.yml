name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  push:
    branches: [ "latest" ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run PHP to HTML conversion
        run: |
          docker run --rm -v "${{ github.workspace }}:/app" php:8.1-cli sh -c '
            apt-get update && \
            apt-get install -y curl && \
            curl -fsSL https://deb.nodesource.com/setup_23.x | bash - && \
            apt-get install -y nodejs && \
            npm install -g sass && \
            cd /app/src && \
            if [ -d HTML ]; then rm -rf HTML; fi && \
            echo "Starting PHP to HTML conversion..." && \
            find . -type f -name "*.php" -not -path "*include*" -exec sh -c "\
                for php_file; do \
                    echo \"Processing \${php_file}\"; \
                    relative_path=\"\${php_file#./}\"; \
                    html_file=\"HTML/\${relative_path%.php}.html\"; \
                    mkdir -p \"\$(dirname \"\$html_file\")\"; \
                    php \"\$php_file\" > \"\$html_file\"; \
                done" sh {} + && \
            if [ -d assets ]; then cp -rf ./assets ./HTML; fi && \
            if [ -d HTML/assets/scss ]; then rm -rf ./HTML/assets/scss; fi && \
            sass ./assets/scss/styles.scss ./assets/css/styles.css && \
            if [ -f ./_config.yml ]; then cp -f ./_config.yml ./HTML; fi && \
            if [ -d ../HTML ]; then rm -rf ../HTML; fi && mv -f ./HTML ..
          '

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./HTML
          destination: ./_site

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./_site

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4